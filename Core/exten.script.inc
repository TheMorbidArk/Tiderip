static const char* extenModuleCode =
"class Regex{\n"
"    static Tide pattern = \".*\"  // means 任意字符串\n"
"    static Tide times = 1         // 匹配次数\n"
"    static Tide flagICASE = false // Flag -> 是否识别大小写\n"
"    static Tide flagNEWLINE = false// Flag -> 是否识别换行符\n"
"    static getPattern(){\n"
"        return pattern\n"
"    }\n"
"    static getTimes(){\n"
"        return times\n"
"    }\n"
"    static getFlagICASE(){\n"
"        return flagICASE\n"
"    }\n"
"    static getflagNEWLINE(){\n"
"        return flagNEWLINE\n"
"    }\n"
"    static setPattern(obj){\n"
"        pattern = obj.toString\n"
"    }\n"
"    static set(objPatern){\n"
"        pattern = objPatern.toString\n"
"    }\n"
"    static set(objPatern,objTimes){\n"
"        pattern = objPatern.toString\n"
"        times = objTimes\n"
"    }\n"
"    static set(objPatern,objICASE,objNEWLINE){\n"
"        pattern = objPatern.toString\n"
"        flagICASE = objICASE\n"
"        flagNEWLINE = objNEWLINE\n"
"    }\n"
"    static set(objPatern,objTimes,objICASE,objNEWLINE){\n"
"        pattern = objPatern.toString\n"
"        times = objTimes\n"
"        flagICASE = objICASE\n"
"        flagNEWLINE = objNEWLINE\n"
"    }\n"
"    static exec(obj){\n"
"        Tide str = obj.toString\n"
"        Tide strList = regexParse_(pattern,str,flagICASE,flagNEWLINE)\n"
"        if(times == 1){\n"
"            return strList[0]\n"
"        } else {\n"
"            Tide bufList = regexParse_(pattern,strList[1],flagICASE,flagNEWLINE)\n"
"            Tide bufString = bufList[1]\n"
"            strList.removeAt(1)\n"
"            strList.add(bufList[0])\n"
"            bufList.clear()\n"
"            times = times - 1\n"
"            while(times != 1){\n"
"                bufList = regexParse_(pattern,bufString,flagICASE,flagNEWLINE)\n"
"                strList.add(bufList[0])\n"
"                bufString = bufList[1]\n"
"                bufList.clear()\n"
"                times = times - 1\n"
"            }\n"
"            return strList"
"        }\n"
"    }\n"
"}\n";